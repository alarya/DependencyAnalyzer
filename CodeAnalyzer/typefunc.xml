<?xml version="1.0" encoding="utf-8"?>
<Type_function_analysis>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\IRuleandAction.cs</file>
  <namespace>CodeAnalysis</namespace>
  <class>AAction</class>
  <function>display<Lines_of_code>5</Lines_of_code><Complexity>2</Complexity></function>
  <class>ARule</class>
  <function>ARule<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>add<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doActions<Lines_of_code>9</Lines_of_code><Complexity>3</Complexity></function>
  <function>indexOfType<Lines_of_code>11</Lines_of_code><Complexity>1</Complexity></function>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\Parser.cs</file>
  <namespace>CodeAnalysis</namespace>
  <class>Parser</class>
  <function>Parser<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>add<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>parse<Lines_of_code>7</Lines_of_code><Complexity>3</Complexity></function>
  <class>TestParser</class>
  <function>ProcessCommandline<Lines_of_code>16</Lines_of_code><Complexity>3</Complexity></function>
  <function>ShowCommandLine<Lines_of_code>9</Lines_of_code><Complexity>2</Complexity></function>
  <function>Main<Lines_of_code>124</Lines_of_code><Complexity>15</Complexity></function>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\RulesAndActions.cs</file>
  <namespace>CodeAnalysis</namespace>
  <class>Elem</class>
  <function>ToString<Lines_of_code>11</Lines_of_code><Complexity>1</Complexity></function>
  <class>Relationships</class>
  <class>FinalRelationships</class>
  <function>getrelationships<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>ReinitializeList<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <class>Repository</class>
  <function>Repository<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>getInstance<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>addtypes<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>gettypes<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <class>PushStack</class>
  <function>PushStack<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>57</Lines_of_code><Complexity>10</Complexity></function>
  <class>PopStack</class>
  <function>PopStack<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>checkForFunction<Lines_of_code>18</Lines_of_code><Complexity>2</Complexity></function>
  <function>doAction<Lines_of_code>37</Lines_of_code><Complexity>9</Complexity></function>
  <class>Aggfound</class>
  <function>Aggfound<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>29</Lines_of_code><Complexity>5</Complexity></function>
  <class>Inheritancefound</class>
  <function>Inheritancefound<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>22</Lines_of_code><Complexity>2</Complexity></function>
  <class>Usingaction</class>
  <function>Usingaction<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>33</Lines_of_code><Complexity>6</Complexity></function>
  <class>CompositionAction</class>
  <function>CompositionAction<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>25</Lines_of_code><Complexity>4</Complexity></function>
  <class>PrintFunction</class>
  <function>PrintFunction<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>display<Lines_of_code>5</Lines_of_code><Complexity>2</Complexity></function>
  <function>doAction<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <class>Print</class>
  <function>Print<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>4</Lines_of_code><Complexity>1</Complexity></function>
  <class>Braceless</class>
  <function>Braceless<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>doAction<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <class>DetectNamespace</class>
  <function>test<Lines_of_code>13</Lines_of_code><Complexity>2</Complexity></function>
  <class>DetectAggregation</class>
  <function>test<Lines_of_code>20</Lines_of_code><Complexity>5</Complexity></function>
  <class>DetectComposition</class>
  <function>test<Lines_of_code>21</Lines_of_code><Complexity>4</Complexity></function>
  <class>DetectInheritance</class>
  <function>test<Lines_of_code>18</Lines_of_code><Complexity>3</Complexity></function>
  <class>DetectClass</class>
  <function>test<Lines_of_code>19</Lines_of_code><Complexity>2</Complexity></function>
  <class>DetectFunction</class>
  <function>isSpecialToken<Lines_of_code>7</Lines_of_code><Complexity>3</Complexity></function>
  <function>test<Lines_of_code>15</Lines_of_code><Complexity>3</Complexity></function>
  <class>DetectbracelessScope</class>
  <function>isSpecialToken<Lines_of_code>7</Lines_of_code><Complexity>3</Complexity></function>
  <function>test<Lines_of_code>14</Lines_of_code><Complexity>3</Complexity></function>
  <class>DetectUsing</class>
  <function>isSpecialToken<Lines_of_code>7</Lines_of_code><Complexity>3</Complexity></function>
  <function>test<Lines_of_code>28</Lines_of_code><Complexity>7</Complexity></function>
  <class>DetectAnonymousScope</class>
  <function>test<Lines_of_code>13</Lines_of_code><Complexity>2</Complexity></function>
  <class>DetectLeavingScope</class>
  <function>test<Lines_of_code>11</Lines_of_code><Complexity>2</Complexity></function>
  <class>BuildCodeAnalyzer</class>
  <function>BuildCodeAnalyzer<Lines_of_code>4</Lines_of_code><Complexity>1</Complexity></function>
  <function>build<Lines_of_code>45</Lines_of_code><Complexity>1</Complexity></function>
  <function>build1<Lines_of_code>66</Lines_of_code><Complexity>1</Complexity></function>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\ScopeStack.cs</file>
  <namespace>CodeAnalysis</namespace>
  <class>ScopeStack</class>
  <function>push<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>pop<Lines_of_code>9</Lines_of_code><Complexity>2</Complexity></function>
  <function>clear<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>lastPopped<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>display<Lines_of_code>6</Lines_of_code><Complexity>2</Complexity></function>
  <class>Test</class>
  <struct>Elem1</struct>
  <function>make<Lines_of_code>5</Lines_of_code><Complexity>1</Complexity></function>
  <function>ToString<Lines_of_code>9</Lines_of_code><Complexity>1</Complexity></function>
  <function>Main<Lines_of_code>33</Lines_of_code><Complexity>1</Complexity></function>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\Semi.cs</file>
  <namespace>CSsemi</namespace>
  <class>CSemiExp</class>
  <function>CSemiExp<Lines_of_code>7</Lines_of_code><Complexity>1</Complexity></function>
  <function>Equals<Lines_of_code>9</Lines_of_code><Complexity>3</Complexity></function>
  <function>FindFirst<Lines_of_code>6</Lines_of_code><Complexity>2</Complexity></function>
  <function>FindLast<Lines_of_code>6</Lines_of_code><Complexity>2</Complexity></function>
  <function>Contains<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>GetHashCode<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>open<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>close<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>isTerminator<Lines_of_code>13</Lines_of_code><Complexity>3</Complexity></function>
  <function>get<Lines_of_code>7</Lines_of_code><Complexity>2</Complexity></function>
  <function>IsPunc<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>IsOperatorPair<Lines_of_code>15</Lines_of_code><Complexity>3</Complexity></function>
  <function>getSemi<Lines_of_code>26</Lines_of_code><Complexity>7</Complexity></function>
  <function>insert<Lines_of_code>8</Lines_of_code><Complexity>2</Complexity></function>
  <function>Add<Lines_of_code>4</Lines_of_code><Complexity>1</Complexity></function>
  <function>Add<Lines_of_code>4</Lines_of_code><Complexity>2</Complexity></function>
  <function>initialize<Lines_of_code>6</Lines_of_code><Complexity>2</Complexity></function>
  <function>flush<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>isComment<Lines_of_code>7</Lines_of_code><Complexity>2</Complexity></function>
  <function>display<Lines_of_code>4</Lines_of_code><Complexity>1</Complexity></function>
  <function>displayStr<Lines_of_code>10</Lines_of_code><Complexity>3</Complexity></function>
  <function>clone<Lines_of_code>8</Lines_of_code><Complexity>2</Complexity></function>
  <function>remove<Lines_of_code>8</Lines_of_code><Complexity>2</Complexity></function>
  <function>remove<Lines_of_code>8</Lines_of_code><Complexity>2</Complexity></function>
  <function>Main<Lines_of_code>58</Lines_of_code><Complexity>6</Complexity></function>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\Toker.cs</file>
  <namespace>CStoker</namespace>
  <class>CToker</class>
  <function>CToker<Lines_of_code>4</Lines_of_code><Complexity>1</Complexity></function>
  <function>openFile<Lines_of_code>12</Lines_of_code><Complexity>3</Complexity></function>
  <function>openString<Lines_of_code>12</Lines_of_code><Complexity>3</Complexity></function>
  <function>close<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>removeReturn<Lines_of_code>9</Lines_of_code><Complexity>3</Complexity></function>
  <function>removeReturn<Lines_of_code>9</Lines_of_code><Complexity>3</Complexity></function>
  <function>readLine<Lines_of_code>20</Lines_of_code><Complexity>5</Complexity></function>
  <function>getLine<Lines_of_code>29</Lines_of_code><Complexity>7</Complexity></function>
  <function>extract<Lines_of_code>36</Lines_of_code><Complexity>9</Complexity></function>
  <function>extractDQuote<Lines_of_code>29</Lines_of_code><Complexity>6</Complexity></function>
  <function>extractSQuote<Lines_of_code>29</Lines_of_code><Complexity>6</Complexity></function>
  <function>extractComment<Lines_of_code>47</Lines_of_code><Complexity>9</Complexity></function>
  <function>eatCComment<Lines_of_code>30</Lines_of_code><Complexity>6</Complexity></function>
  <function>IsGrammarPunctuation<Lines_of_code>7</Lines_of_code><Complexity>3</Complexity></function>
  <function>eatAscii<Lines_of_code>14</Lines_of_code><Complexity>3</Complexity></function>
  <function>eatPunctuationChar<Lines_of_code>5</Lines_of_code><Complexity>1</Complexity></function>
  <function>fillBuffer<Lines_of_code>27</Lines_of_code><Complexity>8</Complexity></function>
  <function>getTok<Lines_of_code>12</Lines_of_code><Complexity>4</Complexity></function>
  <function>peekNextTok<Lines_of_code>7</Lines_of_code><Complexity>2</Complexity></function>
  <function>pushBack<Lines_of_code>3</Lines_of_code><Complexity>1</Complexity></function>
  <function>Main<Lines_of_code>82</Lines_of_code><Complexity>13</Complexity></function>
  <file>E:\Syracuse(FALL2014)\SMA\CodeAnalyzer\Parser\Properties\AssemblyInfo.cs</file>